@using ClozerWoods.Models.Entities
@using ClozerWoods.Models.ViewModels
@model SharedViewModel

@{
    async Task RenderNavigationNode(IEnumerable<Page> pages) {
        <ul>
            @foreach(var p in pages) {

                <li>
                    <a asp-area="" asp-controller="Public" asp-action="Page" asp-route-stub="@p.Stub">@p.Title</a>
                    @if(p.Children != null) {
                        await RenderNavigationNode(p.Children);
                    }
                </li>
            }
        </ul>
    }
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ClozerWoods</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true">
    <link rel="icon" href="data:,">
</head>
<body>
    <main>
        <header>
            <h1>Clozer Woods</h1>
        </header>
        <content class="rounded">
            @if(Model.PublishedPages != null && Model.PublishedPages.Any()) {
                <aside class="rounded">
                    <nav>
                        @{
                            await RenderNavigationNode(Model.PublishedPages);
                        }
                    </nav>
                </aside>
            }

            @RenderBody()
            <div class="clear"></div>
        </content>
    </main>

    @RenderSection("scripts", false)
</body>
</html>
